-- ========================================
-- SCHEMA COMPATÍVEL COM ENTITY FRAMEWORK
-- ========================================
-- Este arquivo cria a estrutura de banco compatível com o Context gerado

USE brainflow;

-- Deletar tabelas existentes
DROP TABLE IF EXISTS progresso;
DROP TABLE IF EXISTS comissoes;
DROP TABLE IF EXISTS pagamentos;
DROP TABLE IF EXISTS forum_mensagens;
DROP TABLE IF EXISTS forum_topicos;
DROP TABLE IF EXISTS aulas;
DROP TABLE IF EXISTS modulos;
DROP TABLE IF EXISTS cursos;
DROP TABLE IF EXISTS afiliados;
DROP TABLE IF EXISTS usuario_login;
DROP TABLE IF EXISTS usuarios;
DROP TABLE IF EXISTS usuario_tipo;

-- ==========================
-- TABELA: usuario_tipo
-- ==========================
CREATE TABLE usuario_tipo (
    CD_TIPO_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    NO_TIPO VARCHAR(50) NOT NULL,
    DS_TIPO VARCHAR(200)
);

-- Inserir tipos padrão
INSERT INTO usuario_tipo (CD_TIPO_USUARIO, NO_TIPO, DS_TIPO) VALUES 
(1, 'comum', 'Usuário comum/estudante'),
(2, 'afiliado', 'Afiliado/Instrutor'),
(3, 'admin', 'Administrador');

-- ==========================
-- TABELA: usuarios
-- ==========================
CREATE TABLE usuarios (
    CD_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    CD_TIPO_USUARIO INT NOT NULL DEFAULT 1,
    NO_USUARIO VARCHAR(200) NOT NULL,
    TX_EMAIL VARCHAR(255) UNIQUE NOT NULL,
    TX_TELEFONE VARCHAR(20),
    SN_ATIVO BOOLEAN DEFAULT TRUE,
    DT_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_TIPO_USUARIO) REFERENCES usuario_tipo(CD_TIPO_USUARIO)
);

-- ==========================
-- TABELA: usuario_login
-- ==========================
CREATE TABLE usuario_login (
    CD_LOGIN INT AUTO_INCREMENT PRIMARY KEY,
    CD_USUARIO INT NOT NULL,
    TX_SENHA_HASH VARCHAR(255) NOT NULL,
    TX_TOKEN_RECUPERACAO VARCHAR(255),
    DT_VALIDADE_TOKEN DATETIME,
    DT_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_USUARIO) REFERENCES usuarios(CD_USUARIO)
);

-- ==========================
-- TABELA: afiliados
-- ==========================
CREATE TABLE afiliados (
    CD_AFILIADO INT AUTO_INCREMENT PRIMARY KEY,
    CD_USUARIO INT NOT NULL,
    TX_CNPJ VARCHAR(20),
    TX_RAZAO_SOCIAL VARCHAR(200),
    SN_APROVADO BOOLEAN DEFAULT FALSE,
    DT_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_USUARIO) REFERENCES usuarios(CD_USUARIO)
);

-- ==========================
-- TABELA: cursos
-- ==========================
CREATE TABLE cursos (
    CD_CURSO INT AUTO_INCREMENT PRIMARY KEY,
    CD_AFILIADO INT NOT NULL,
    NO_CURSO VARCHAR(150) NOT NULL,
    DS_CURSO TEXT,
    VL_PRECO DECIMAL(10,2) DEFAULT 0.00,
    TX_STATUS ENUM('rascunho','publicado') DEFAULT 'rascunho',
    TX_IMAGEM_CAPA VARCHAR(255),
    DT_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_AFILIADO) REFERENCES afiliados(CD_AFILIADO)
);

-- ==========================
-- TABELA: modulos
-- ==========================
CREATE TABLE modulos (
    CD_MODULO INT AUTO_INCREMENT PRIMARY KEY,
    CD_CURSO INT NOT NULL,
    NO_MODULO VARCHAR(150) NOT NULL,
    NU_ORDEM INT DEFAULT 1,
    DT_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_CURSO) REFERENCES cursos(CD_CURSO)
);

-- ==========================
-- TABELA: aulas
-- ==========================
CREATE TABLE aulas (
    CD_AULA INT AUTO_INCREMENT PRIMARY KEY,
    CD_MODULO INT NOT NULL,
    NO_AULA VARCHAR(150) NOT NULL,
    DS_AULA TEXT,
    SN_GRATUITA BOOLEAN DEFAULT FALSE,
    TX_URL_VIDEO VARCHAR(500),
    DT_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_MODULO) REFERENCES modulos(CD_MODULO)
);

-- ==========================
-- TABELA: pagamentos (pedidos)
-- ==========================
CREATE TABLE pagamentos (
    CD_PEDIDO INT AUTO_INCREMENT PRIMARY KEY,
    CD_USUARIO INT NOT NULL,
    CD_CURSO INT NOT NULL,
    VL_TOTAL DECIMAL(10,2) NOT NULL,
    TX_STATUS ENUM('pendente','confirmado','cancelado') DEFAULT 'pendente',
    DT_PEDIDO DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_USUARIO) REFERENCES usuarios(CD_USUARIO),
    FOREIGN KEY (CD_CURSO) REFERENCES cursos(CD_CURSO)
);

-- ==========================
-- TABELA: comissoes
-- ==========================
CREATE TABLE comissoes (
    CD_COMISSAO INT AUTO_INCREMENT PRIMARY KEY,
    CD_PEDIDO INT NOT NULL,
    CD_AFILIADO INT NOT NULL,
    VL_COMISSAO DECIMAL(10,2) NOT NULL,
    TX_STATUS ENUM('pendente','pago') DEFAULT 'pendente',
    DT_CALCULO DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_PEDIDO) REFERENCES pagamentos(CD_PEDIDO),
    FOREIGN KEY (CD_AFILIADO) REFERENCES afiliados(CD_AFILIADO)
);

-- ==========================
-- TABELA: progresso
-- ==========================
CREATE TABLE progresso (
    CD_USUARIO_AULA INT AUTO_INCREMENT PRIMARY KEY,
    CD_USUARIO INT NOT NULL,
    CD_AULA INT NOT NULL,
    SN_CONCLUIDA BOOLEAN DEFAULT FALSE,
    DT_INICIO DATETIME,
    DT_CONCLUSAO DATETIME,
    DT_ALTERACAO DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CD_USUARIO) REFERENCES usuarios(CD_USUARIO),
    FOREIGN KEY (CD_AULA) REFERENCES aulas(CD_AULA),
    UNIQUE KEY unique_usuario_aula (CD_USUARIO, CD_AULA)
);